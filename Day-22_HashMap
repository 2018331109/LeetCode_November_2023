1424. Diagonal Traverse II

STATEMENT
Given a 2D integer array nums, return all elements of nums in diagonal order as shown in the below images.

SOLUTION

C++
class Solution
{
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& nums)
    {
        vector<int>ans;
        int r=nums.size();
        map<int, vector<int>>mp;
        r--;
        while(r>=0)
        {
            for (int j=0;j<nums[r].size();j++)
            {
                mp[r+j].push_back(nums[r][j]);
            }
            r--;
        }
        
        for(auto it:mp)
        {
            for(auto iit:it.second)
            {
                ans.push_back(iit);
            }
        }
        
        return ans;
    }
};

//The solution initially I thought,,,

class Solution
{
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& nums)
    {
        vector<int>ans;
        int r=nums.size();
        map<int, vector<int>>mp;
        r--;
        while(r>=0)
        {
            for (int j=0;j<nums[r].size();j++)
            {
                mp[r+j].push_back(nums[r][j]);
            }
            r--;
        }
        
        for(auto it:mp)
        {
            for(auto iit:it.second)
            {
                ans.push_back(iit);
            }
        }
        
        return ans;
    }
};
