1630. Arithmetic Subarrays

STATEMENT
A sequence of numbers is called arithmetic if it consists of at least two elements, and the difference between every 
two consecutive elements is the same. More formally, a sequence s is arithmetic if and only if 
s[i+1] - s[i] == s[1] - s[0] for all valid i.
For example, these are arithmetic sequences:
1, 3, 5, 7, 9
7, 7, 7, 7
3, -1, -5, -9
The following sequence is not arithmetic:
1, 1, 2, 5, 7
You are given an array of n integers, nums, and two arrays of m integers each, l and r, 
representing the m range queries, where the ith query is the range [l[i], r[i]]. All the arrays are 0-indexed.
Return a list of boolean elements answer, where answer[i] is true if the subarray nums[l[i]], nums[l[i]+1], ... , 
nums[r[i]] can be rearranged to form an arithmetic sequence, and false otherwise.

SOLUTION

C++
class Solution
{
public:
    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r)
    {
        
        int sz=l.size();
        vector<bool>ans;
        for(int i=0;i<sz;i++)
        {
            int f=l[i], s=r[i];
            vector<int>v;
            for(int ii=f;ii<=s;ii++)
            {
                v.push_back(nums[ii]);
            }
            
            sort(v.begin(), v.end());
            int flag=0;
            int last;
            for(int i=1;i<v.size();i++)
            {
                if(i==1)
                {
                    last=abs(v[i]-v[i-1]);
                }
                else
                {
                    int d=abs(v[i]-v[i-1]);
                    if(d!=last)
                    {
                        flag=1;
                        ans.push_back(false);
                        break;
                    }
                }
            }
            
            if(!flag)
            {
                ans.push_back(true);
            }
        }
        
        return ans;

    }
};
